{"createdAt":"2025-01-25T10:45:14.517Z","updatedAt":"2025-01-27T09:28:38.273Z","id":"5QghOtFiCKEWBe2P","name":"Backup Workflow Vers Github","active":true,"nodes":[{"parameters":{},"id":"0f218631-4a9d-4831-addf-afbf67a62699","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[0,-80]},{"parameters":{"rule":{"interval":[{"field":"hours"}]}},"id":"2cce2dd6-d859-4149-acbd-82d490516d62","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[0,120]},{"parameters":{"filters":{},"requestOptions":{}},"id":"200c2310-78c6-450b-a505-99e235084c6d","name":"n8n (List All Workflows)","type":"n8n-nodes-base.n8n","typeVersion":1,"position":[280,20],"alwaysOutputData":false,"credentials":{"n8nApi":{"id":"BC4KoDrD46diJhJ3","name":"n8n account"}}},{"parameters":{"workflowId":{"__rl":true,"value":"5QghOtFiCKEWBe2P","mode":"list","cachedResultName":"Backup Workflow Vers Github"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"mode":"each","options":{"waitForSubWorkflow":true}},"id":"fb6c36e1-d812-49f9-931e-f357459b8bc5","name":"Execute Sub-Workflow","type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[600,20]},{"parameters":{"inputSource":"passthrough"},"id":"ce0783be-5db8-4ed2-9755-e13fb97bf434","name":"Workflow Input Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-180,520]},{"parameters":{"assignments":{"assignments":[{"name":"repo_owner","type":"string","value":"=Olivier340"},{"name":"repo_name","type":"string","value":"=n8n-worklow"},{"name":"repo_path","type":"string","value":"="}]},"includeOtherFields":true,"options":{}},"id":"95e741ae-9f37-4923-9208-c3330067242f","name":"Config","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[80,520]},{"parameters":{"assignments":{"assignments":[{"name":"=subPath","type":"string","value":"={{ $json.createdAt.split('-')[0]}}/{{$json.createdAt.split('-')[1]}}/"}]},"includeOtherFields":true,"options":{}},"id":"5e0e5851-2916-4804-92a9-720b236d08dc","name":"Create sub path","type":"n8n-nodes-base.set","typeVersion":3.3,"position":[280,520]},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"value":"={{ $('Create sub path').item.json.repo_owner }}","mode":""},"repository":{"__rl":true,"value":"={{ $('Create sub path').item.json.repo_name }}","mode":""},"filePath":"={{ $('Config').item.json.repo_path }}{{ $('Create sub path').item.json.subPath }}{{ $json.data[0].name }}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"b67dfa78-3dad-4070-b563-c7d6d8eb7e5c","name":"Get file data","type":"n8n-nodes-base.github","typeVersion":1,"position":[520,520],"alwaysOutputData":true,"credentials":{"githubApi":{"id":"VK7usXEp6ZVGgyVU","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"resource":"file","owner":"={{ $('Config').first().json.repo_owner }}","repository":"={{ $('Config').first().json.repo_name }}","filePath":"={{ $('Config').first().json.repo_path }}{{ $('Create sub path').item.json.subPath }}{{ $('Create sub path').item.json.name }}.json","fileContent":"={{ JSON.stringify( $('Workflow_Data').item.json.data[0]) }}","commitMessage":"= {{ $('Create sub path').item.json.name }}(new)"},"id":"2d4f0432-52f9-494f-903f-1ad761dbb301","name":"Create new file","type":"n8n-nodes-base.github","typeVersion":1,"position":[880,380],"credentials":{"githubApi":{"id":"VK7usXEp6ZVGgyVU","name":"GitHub account"}}},{"parameters":{"jsCode":"/* Compare the existing JSON from GitHub with the data from $json\n   Sets github_status to 'same' or 'different' or 'new'.\n*/\n\nfunction orderKeys(obj){\n  const ordered = {};\n  Object.keys(obj).sort().forEach(k=> {ordered[k]=obj[k]});\n  return ordered;\n}\n\nif($json.content){\n  // If file is found, decode base64\n  const githubRaw = Buffer.from($json.content, 'base64').toString('utf8');\n  const githubObj = JSON.parse(githubRaw);\n  const localObj = $input.all()[0].json;\n\n  const ghOrdered = orderKeys(githubObj);\n  const locOrdered = orderKeys(localObj);\n\n  if(JSON.stringify(ghOrdered) === JSON.stringify(locOrdered)){\n    $json.github_status = 'same';\n  } else {\n    $json.github_status = 'different';\n    $json.n8n_data_stringy = JSON.stringify(locOrdered, null, 2);\n  }\n  // Récupérer le sha pour le node 'edit'\n  // GitHub renvoie le sha dans $json.sha\n} else {\n  // No content => treat as new\n  $json.github_status = 'new';\n  $json.n8n_data_stringy = JSON.stringify($input.all()[0].json, null, 2);\n}\n\nreturn $input.all();\n"},"id":"9e976f35-136e-41f2-b3c0-c4e2b619af32","name":"Compare existing content","type":"n8n-nodes-base.code","typeVersion":1,"position":[880,580]},{"parameters":{"dataType":"string","value1":"={{ $json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"2c618fb6-b413-4e65-9c84-baf20cf27dd3","name":"Check Status","type":"n8n-nodes-base.switch","typeVersion":1,"position":[1060,680]},{"parameters":{},"id":"d85594ba-8cb7-4cd5-9674-95f0e38b385f","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","typeVersion":1,"position":[1320,400]},{"parameters":{},"id":"038a575a-f408-46de-9742-b6845d0a329e","name":"File is different (NoOp)","type":"n8n-nodes-base.noOp","typeVersion":1,"position":[1320,680]},{"parameters":{},"id":"006a3869-4703-417d-8e9d-3e0e8c37b3f3","name":"File is new (NoOp)","type":"n8n-nodes-base.noOp","typeVersion":1,"position":[1320,920]},{"parameters":{"resource":"file","operation":"edit","owner":"={{ $('Config').first().json.repo_owner }}","repository":"={{ $('Config').first().json.repo_name }}","filePath":"={{ $('Config').first().json.repo_path }}{{ $('Create sub path').item.json.subPath }}{{ $('Create sub path').item.json.name }}.json","fileContent":"={{ JSON.stringify( $('Workflow_Data').item.json.data[0]) }}","commitMessage":"= {{ $('Create sub path').item.json.name }}(updated)"},"id":"6d9afc72-6043-466d-8cdf-38ee749df0fc","name":"Edit existing file","type":"n8n-nodes-base.github","typeVersion":1,"position":[1500,680],"credentials":{"githubApi":{"id":"VK7usXEp6ZVGgyVU","name":"GitHub account"}}},{"parameters":{"assignments":{"assignments":[{"name":"Done","type":"boolean","value":true}]},"options":{}},"id":"69f40a03-a344-4ac9-b5c1-be0c7a468d97","name":"Return","type":"n8n-nodes-base.set","typeVersion":3.3,"position":[1760,680]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e1e4a2fb-8da9-4700-a1f6-b65993eded1d","leftValue":"={{ $json.error }}","rightValue":"The resource you are requesting could not be found","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[680,520],"id":"b4f228ef-768d-4e25-b3be-8a7ffdea7ea8","name":"If file not found"},{"parameters":{"aggregate":"aggregateAllItemData","options":{}},"type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[400,320],"id":"aa4fb463-9558-46ad-a51f-aa18d011304f","name":"Workflow_Data"}],"connections":{"On clicking 'execute'":{"main":[[{"node":"n8n (List All Workflows)","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"n8n (List All Workflows)","type":"main","index":0}]]},"n8n (List All Workflows)":{"main":[[{"node":"Execute Sub-Workflow","type":"main","index":0}]]},"Workflow Input Trigger":{"main":[[{"node":"Config","type":"main","index":0}]]},"Config":{"main":[[{"node":"Create sub path","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Workflow_Data","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file not found","type":"main","index":0}]]},"Compare existing content":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different (NoOp)","type":"main","index":0}],[{"node":"File is new (NoOp)","type":"main","index":0}]]},"File is different (NoOp)":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"File is new (NoOp)":{"main":[[{"node":"Return","type":"main","index":0}]]},"If file not found":{"main":[[{"node":"Create new file","type":"main","index":0}],[{"node":"Compare existing content","type":"main","index":0}]]},"Execute Sub-Workflow":{"main":[[]]},"Workflow_Data":{"main":[[{"node":"Get file data","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{"On clicking 'execute'":[{"json":{}}],"Workflow Input Trigger":[{"json":{"createdAt":"2025-01-23T10:02:13.268Z","updatedAt":"2025-01-23T10:03:53.842Z","id":"lPr26gwZPXBMMu1o","name":"AI agent that can scrape webpages 2","active":false,"nodes":[{"parameters":{},"id":"e7374976-f3c1-4f60-ae57-9eec65444216","name":"On new manual Chat Message","type":"@n8n/n8n-nodes-langchain.manualChatTrigger","position":[440,380],"typeVersion":1},{"parameters":{"model":"gpt-4-1106-preview","options":{"frequencyPenalty":0.3,"temperature":0.7,"timeout":300000}},"id":"97e84a23-9536-43cd-94e9-b8166be8ed32","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[660,600],"typeVersion":1},{"parameters":{"url":"={{ encodeURI($json.query.url) }}","options":{"allowUnauthorizedCerts":true,"response":{"response":{"neverError":true}}}},"id":"63d98361-8978-4042-84e7-53a0e226f946","name":"HTTP Request","type":"n8n-nodes-base.httpRequest","position":[1020,900],"typeVersion":4.1,"alwaysOutputData":false,"onError":"continueRegularOutput"},{"parameters":{"fields":{"values":[{"name":"HTML","stringValue":"={{ $json?.data.match(/<body[^>]*>([\\s\\S]*?)<\\/body>/i)[1] }}"}]},"include":"selected","includeFields":"HTML","options":{}},"id":"17d4b5ae-f5d3-4793-8419-d3c879f7f50d","name":"Exctract HTML Body","type":"n8n-nodes-base.set","position":[1440,1180],"typeVersion":3.2},{"parameters":{"conditions":{"boolean":[{"value1":"={{ $json.hasOwnProperty('error') }}","value2":true}]}},"id":"36c38ee4-724c-4ba2-a59a-ac0bbc912e94","name":"Is error?","type":"n8n-nodes-base.if","position":[1220,900],"typeVersion":1},{"parameters":{"fields":{"values":[{"name":"page_content","stringValue":"={{ $('QUERY_PARAMS').first()?.json?.query?.url == null ? \"INVALID action_input. This should be an HTTP query string like this: \\\"?url=VALIDURL&method=SELECTEDMETHOD\\\". Only a simple string value is accepted. JSON object as an action_input is NOT supported!\" : JSON.stringify($json.error) }}"}]},"include":"selected","includeFields":"HTML","options":{}},"id":"4e4d97ce-14a9-4f4f-aa75-f218784d9ed9","name":"Stringify error message","type":"n8n-nodes-base.set","position":[1440,680],"typeVersion":3.2},{"parameters":{},"id":"8452e5c4-aa29-4a02-9579-8d9da3727bcb","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[420,900],"typeVersion":1},{"parameters":{"fields":{"values":[{"name":"HTML","stringValue":"={{ ($json.HTML || \"HTML BODY CONTENT FOR THIS SEARCH RESULT IS NOT AVAILABLE\").replace(/<script[^>]*>([\\s\\S]*?)<\\/script>|<style[^>]*>([\\s\\S]*?)<\\/style>|<noscript[^>]*>([\\s\\S]*?)<\\/noscript>|<!--[\\s\\S]*?-->|<iframe[^>]*>([\\s\\S]*?)<\\/iframe>|<object[^>]*>([\\s\\S]*?)<\\/object>|<embed[^>]*>([\\s\\S]*?)<\\/embed>|<video[^>]*>([\\s\\S]*?)<\\/video>|<audio[^>]*>([\\s\\S]*?)<\\/audio>|<svg[^>]*>([\\s\\S]*?)<\\/svg>/ig, '')}}"}]},"options":{}},"id":"063220c2-fa4d-4d5e-9549-7712aaa72921","name":"Remove extra tags","type":"n8n-nodes-base.set","position":[1640,1180],"typeVersion":3.2},{"parameters":{"fields":{"values":[{"name":"HTML","stringValue":"={{ $json.HTML.replace(/href\\s*=\\s*\"(.+?)\"/gi, 'href=\"NOURL\"').replace(/src\\s*=\\s*\"(.+?)\"/gi, 'src=\"NOIMG\"')}}"}]},"options":{}},"id":"036511d7-a4be-4bbf-b4bc-47ddfabfe76f","name":"Simplify output","type":"n8n-nodes-base.set","position":[2020,1080],"notesInFlow":true,"typeVersion":3.2,"notes":"remove links and image URLs"},{"parameters":{"conditions":{"string":[{"value1":"={{ $('CONFIG').first()?.json?.query?.method }}","operation":"contains","value2":"simplif"}]}},"id":"5e2b5383-adcf-4de0-a406-4f5d631b5e8a","name":"Simplify?","type":"n8n-nodes-base.if","position":[1840,1180],"typeVersion":1},{"parameters":{"fields":{"values":[{"name":"query","type":"objectValue","objectValue":"={{ $json.query.substring($json.query.indexOf('?') + 1).split('&').reduce((result, item) => (result[item.split('=')[0]] = decodeURIComponent(item.split('=')[1]), result), {}) }}"}]},"options":{}},"id":"a0fc004a-ab0f-4b31-94df-50f5eee69c86","name":"QUERY_PARAMS","type":"n8n-nodes-base.set","position":[620,900],"typeVersion":3.2},{"parameters":{"fields":{"values":[{"name":"query.maxlimit","type":"numberValue","numberValue":"={{ $json?.query?.maxlimit == null ? 70000 : Number($json?.query?.maxlimit) }}"}]},"options":{}},"id":"3b6599d6-ce9a-4861-9b52-07156eb52539","name":"CONFIG","type":"n8n-nodes-base.set","position":[820,900],"typeVersion":3.2},{"parameters":{"content":"### Convert the query string into JSON, apply the limit for a page length","height":235.79999999999995,"width":556.25},"id":"14f683be-76f6-4034-9a0e-d785738b135f","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[400,840],"typeVersion":1},{"parameters":{"content":"## Send an error message:\n1. If query param was incorrect, return the instruction. AI Agent should pick up on this and adapt the query on the next iteration.\n2. If the query is OK and an error was during the HTTP Request, then send back the original error message.","height":285.7,"width":491},"id":"6deabcb7-a984-48ec-af2a-8c70b3a4e4bf","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[1380,540],"typeVersion":1},{"parameters":{"content":"## Post-processing of the HTML page:\n1. Keep only <BODY> content\n2. Remove inline <SCRIPT> tag entirely, as well as: NOSCRIPT, IFRAME, OBJECT, EMBED, VIDEO, AUDIO, SVG, and HTML comments.\n3. In case query parameter method=simplified, replace all page URLs (a href) and IMG (src) with NOURL / NOIMG - this may save up to 20% of the page length\n4. Convert the remaining HTML to Markdown. This step further reduces the length of the page: long HTML tags and styles are eliminated, but the markdown syntax keeps some page structure. This gives much better results compared to just a blank text.\n5. Finally, check the page length. If it's too long, send an \"ERROR: PAGE CONTENT TOO LONG\" instead of the actual page. Of course, you could split the page content in chunks, but sometimes long pages just don't have a needed content, so it makes little sense to burn tokens on them.","height":472.5,"width":1200},"id":"df1e8d00-0e18-44fa-8f94-8a53c27f7c88","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[1380,860],"typeVersion":1},{"parameters":{"content":"## Example ReAct AI Agent\n1. Agent Prompt is default\n2. Check the description of the HTTP_Request_Tool, it guides the agent to provide a query string with several parameters instead of a JSON object","height":483.0226244343891,"width":616.8597285067872},"id":"6afe96a0-0fba-4ae1-ab8f-f7da56d420b1","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[380,240],"typeVersion":1},{"parameters":{"agent":"reActAgent","options":{"humanMessageTemplate":"{input}\n\n{agent_scratchpad}","prefix":"Answer the following questions as best you can. You have access to the following tools:","suffixChat":"Begin! Reminder to always use the exact characters `Final Answer` when responding.","suffix":"Begin!\n\n\tQuestion: {input}\n\tThought:{agent_scratchpad}"}},"id":"d5ff2114-1e74-43cf-9f3c-744c241988db","name":"ReAct AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[660,380],"typeVersion":1},{"parameters":{"html":"={{ $json.HTML }}","destinationKey":"page_content","options":{}},"id":"cc7aef4a-a1fb-4a69-a670-1f200f9e9541","name":"Convert to Markdown","type":"n8n-nodes-base.markdown","position":[2200,1180],"typeVersion":1},{"parameters":{"fields":{"values":[{"name":"page_content","stringValue":"={{ $json.page_content.length < $('CONFIG').first()?.json?.query?.maxlimit ? $json.page_content : \"ERROR: PAGE CONTENT TOO LONG\" }}"},{"name":"page_length","type":"numberValue","numberValue":"={{ $json.page_content.length }}"}]},"include":"selected","options":{}},"id":"11806e8c-5fc4-4d9d-8144-179356993aa7","name":"Send Page Content","type":"n8n-nodes-base.set","position":[2400,1180],"typeVersion":3.2},{"parameters":{"name":"HTTP_Request_Tool","description":"Call this tool to fetch a webpage content. The input should be a stringified HTTP query parameter like this: \"?url=VALIDURL&method=SELECTEDMETHOD\". \"url\" parameter should contain the valid URL string. \"method\" key can be either \"full\" or \"simplified\". method=full will fetch the whole webpage content in the Markdown format, including page links and image links. method=simplified will return the Markdown content of the page but remove urls and image links from the page content for simplicity. Before calling this tool, think strategically which \"method\" to call. Best of all to use method=simplified. However, if you anticipate that the page request is not final or if you need to extract links from the page, pick method=full.","workflowId":"={{ $workflow.id }}","responsePropertyName":"page_content"},"id":"a3a6b199-517b-4987-8281-d7997a32f54b","name":"HTTP_Request_Tool","type":"@n8n/n8n-nodes-langchain.toolWorkflow","position":[780,600],"typeVersion":1},{"parameters":{"content":"Ce modèle est un PoC d'un agent ReAct AI capable de récupérer des pages aléatoires (pas seulement les résultats de recherche Wikipedia ou Google).\n\nDans la partie supérieure, il y a un nœud de chat manuel connecté à un agent LangChain ReAct. L'agent a accès à un outil de flux de travail pour obtenir le contenu de la page.\n\nL'extraction du contenu de la page commence par la conversion des paramètres de requête en objet JSON. Il y a 3 paramètres prédéfinis:\n\nurl – une adresse de la page à récupérer\nméthode = complet / simplifié\nmaxlimit longueur maximale pour la dernière page. Pour les pages plus longues, un message d'erreur est renvoyé à l'agent\nLa récupération de contenu de page est un processus en plusieurs étapes:\n\nUn mode de requête HTTP tente d'obtenir le contenu de la page.\nSi le contenu de la page a été récupéré avec succès, une série de post-traitement commence:\n\nExtrait HTML BODY; contenu\nSupprimez toutes les balises inutiles pour récupérer la taille de la page\nÉliminer davantage les URL externes et les valeurs de scr IMG (basées sur le paramètre de requête de méthode)\nLe HTML restant est converti en Markdown, ce qui permet de récupérer encore plus la longueur de la page tout en préservant la structure de base de la page\nLe contenu restant est renvoyé à un agent s'il n'est pas trop long (maxlimit = 70000 par défaut, voir noeud CONFIG).\nNB: n.\n\nVous pouvez isoler la partie requête HTTP dans un flux de travail distinct.\nVérifiez la description de l'outil Workflow, il guide l'agent pour fournir une chaîne de requête avec plusieurs paramètres au lieu d'un objet JSON.\nVeuillez contacter Eduard avez-vous besoin d'aide supplémentaire pour vos workflows et automatisations n8n!","height":700,"width":580,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1980,100],"id":"bfae8a73-702a-46ce-a261-bb2564d1fefa","name":"Sticky Note4"}],"connections":{"CONFIG":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"Is error?":{"main":[[{"node":"Stringify error message","type":"main","index":0}],[{"node":"Exctract HTML Body","type":"main","index":0}]]},"Simplify?":{"main":[[{"node":"Simplify output","type":"main","index":0}],[{"node":"Convert to Markdown","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Is error?","type":"main","index":0}]]},"QUERY_PARAMS":{"main":[[{"node":"CONFIG","type":"main","index":0}]]},"Simplify output":{"main":[[{"node":"Convert to Markdown","type":"main","index":0}]]},"HTTP_Request_Tool":{"ai_tool":[[{"node":"ReAct AI Agent","type":"ai_tool","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"ReAct AI Agent","type":"ai_languageModel","index":0}]]},"Remove extra tags":{"main":[[{"node":"Simplify?","type":"main","index":0}]]},"Exctract HTML Body":{"main":[[{"node":"Remove extra tags","type":"main","index":0}]]},"Convert to Markdown":{"main":[[{"node":"Send Page Content","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"QUERY_PARAMS","type":"main","index":0}]]},"On new manual Chat Message":{"main":[[{"node":"ReAct AI Agent","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateId":"2006"},"pinData":{},"versionId":"c62ae726-3540-43c2-b5f4-b5eab6ca0d2e","triggerCount":0,"tags":[]}}]},"versionId":"47484bb2-d540-4739-b6ea-844d1fa85288","triggerCount":1,"tags":[],"repo_owner":"Olivier340","repo_name":"n8n-worklow","repo_path":"","subPath":"2025/01/"}