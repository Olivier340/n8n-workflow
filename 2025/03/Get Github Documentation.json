{"createdAt":"2025-03-17T07:16:09.987Z","updatedAt":"2025-03-25T09:26:35.492Z","id":"RtqPlDraIgdak7aG","name":"Get Github Documentation","active":false,"nodes":[{"parameters":{"url":"=https://api.github.com/repos/Olivier340/n8n-docs/contents/{{ $json.path }}","authentication":"predefinedCredentialType","nodeCredentialType":"githubOAuth2Api","options":{"batching":{"batch":{"batchSize":1}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-360,-420],"id":"d997902b-756b-4fca-b3d1-562dc48c475a","name":"HTTP Request","credentials":{"githubOAuth2Api":{"id":"yf4MRzy0qmMObkWx","name":"GitHub account"}},"onError":"continueRegularOutput"},{"parameters":{"url":"={{ $node[\"setFields\"].json[\"urlGithub\"] }}","authentication":"predefinedCredentialType","nodeCredentialType":"githubOAuth2Api","options":{"batching":{"batch":{"batchSize":1}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-2540,0],"id":"52964661-767b-4eb7-aa4e-632eea23638c","name":"HTTP Request1","credentials":{"githubOAuth2Api":{"id":"yf4MRzy0qmMObkWx","name":"GitHub account"}}},{"parameters":{"inputDataFieldName":"=data","name":"={{ $('HTTP Request').item.json.name }}","driveId":{"__rl":true,"mode":"list","value":"My Drive"},"folderId":{"__rl":true,"value":"1ofPptlXCxS_XYk9FMaDGKnBNAu0kJMW2","mode":"list","cachedResultName":"n8n docs","cachedResultUrl":"https://drive.google.com/drive/folders/1ofPptlXCxS_XYk9FMaDGKnBNAu0kJMW2"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[420,-420],"id":"5cf448d6-11d0-4364-9618-454cf825cebc","name":"Google Drive1","credentials":{"googleDriveOAuth2Api":{"id":"Mu7yxTxQSL3Ke6rX","name":"Google Drive account"}}},{"parameters":{"operation":"toBinary","sourceProperty":"content","options":{"fileName":"={{ $json.name.replace(/\\.md$/, '.txt') }}"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[60,-420],"id":"75bf2eab-8370-4721-b8b1-37adc647a320","name":"Convert to File"},{"parameters":{"formTitle":"RAG des documentation de dépôt Github","formDescription":"Ce formulaire vous permet de créer un Rag de n'importe quel documentation sur des dépot Github - par exeple documentation de n8n , de Symfony).\n","formFields":{"values":[{"fieldLabel":"Url du de la documentation du dépôt Github","placeholder":"Url du dépôt ","requiredField":true},{"fieldLabel":"Url de votre répertoire Drive","placeholder":"Url drive","requiredField":true},{"fieldLabel":"Path Sous-répertoire","placeholder":"sous répertoire contenant la documentation"},{"fieldLabel":"Type de fichiers à extraire","fieldType":"dropdown","fieldOptions":{"values":[{"option":"md"},{"option":"rst"},{"option":"txt"},{"option":"json"},{"option":"html"},{"option":"xml"},{"option":"adoc"},{"option":"toml"},{"option":"org"},{"option":"yml  yaml"}]},"multiselect":true,"requiredField":true}]},"options":{}},"type":"n8n-nodes-base.formTrigger","typeVersion":2.2,"position":[-3020,520],"id":"02564271-901d-4eb3-8e12-afc6b7544553","name":"On form submission","webhookId":"b287e4ea-2167-4e6d-b153-649d1c6c7a4c","disabled":true},{"parameters":{"assignments":{"assignments":[{"id":"5edf0f4a-e6fd-4279-836e-fba023ba366a","name":"urlGithub","value":"=https://api.github.com/repos/{{ $json[\"Url du de la documentation du dépôt Github\"].match(/^https:\\/\\/github\\.com\\/(.+)$/)[1] }}/git/trees/main?recursive=1","type":"string"},{"id":"07ebc0fc-db46-4e82-bc49-6bf8688a43ab","name":"urlDrive","value":"={{ $json['Url de votre répertoire Drive'].match(/[-\\w]{25,}/)[0] }}","type":"string"},{"id":"926aea52-c4db-4bfc-bc6b-65fc946f1c00","name":"pathDrive","value":"={{ $json['Path Sous-répertoire'] }}","type":"string"},{"id":"99c95f44-a43c-45de-bcd4-bfdcc1bba245","name":"extensions","value":"=[\"md\"]","type":"array"},{"id":"eb7c34e4-a9b9-4b25-a8d9-4dc58f925ba0","name":"pathGithub","value":"={{ $json[\"Url du de la documentation du dépôt Github\"].match(/^https:\\/\\/github\\.com\\/(.+)$/)[1] }}","type":"string"},{"id":"bad4ab79-177c-4a11-b764-3ac3927cb4e9","name":"folderGithub","value":"={{ $json[\"Url du de la documentation du dépôt Github\"].split('/').slice(-1)[0]?.trim() }}","type":"string"},{"id":"1ed6a58e-b0f3-40cb-a359-f4d06ff12923","name":"folderDocs","value":"docs","type":"string"},{"id":"ba07bede-a304-45e0-a51b-37aea2bcfe14","name":"parentFolderName","value":"Documentation Rag","type":"string"},{"id":"70dbd039-5432-4320-bfb4-726f52c8c40a","name":"idFolderMain","value":"={{ $json.id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-2820,20],"id":"8f6da16b-a1f4-4394-847d-56a75b1a65ac","name":"setFields"},{"parameters":{"authentication":"oAuth2","resource":"folder","name":"={{ $json.path }}","options":{"parents":["='{{ $node[\"setFields\"].json[\"urlDrive\"] }}'"]}},"name":"get drive folder","type":"n8n-nodes-base.googleDrive","typeVersion":1,"position":[-40,-120],"id":"9aedbf06-9883-4ace-b700-7bb72363cc5d","alwaysOutputData":true,"credentials":{"googleDriveOAuth2Api":{"id":"Mu7yxTxQSL3Ke6rX","name":"Google Drive account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"4d42af70-85db-43db-84ff-b3a11d539c73","leftValue":"={{ $json.id }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[260,-120],"id":"86a46a86-187e-41da-bf01-4dabdc34bc47","name":"If","executeOnce":true},{"parameters":{"resource":"folder","name":"={{ $('setFields').item.json.folderGithub }}","driveId":{"__rl":true,"mode":"list","value":"My Drive"},"folderId":{"__rl":true,"value":"1YCugN9LL7YlgkrK89ucRo6gZQuhGN3zB","mode":"list","cachedResultName":"Documentation Rag","cachedResultUrl":"https://drive.google.com/drive/folders/1YCugN9LL7YlgkrK89ucRo6gZQuhGN3zB"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[520,60],"id":"05c21269-8fbf-4970-a913-7e46471d1fa2","name":"Google Drive3","credentials":{"googleDriveOAuth2Api":{"id":"Mu7yxTxQSL3Ke6rX","name":"Google Drive account"}}},{"parameters":{"assignments":{"assignments":[{"id":"b30a3343-4152-44e0-9287-27b1fd8bfce4","name":"idParentFolder","value":"={{ $json.id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[740,-140],"id":"8a67650e-6c55-46a8-a3ea-cd3b2f699f62","name":"Set idParentFolder","alwaysOutputData":true},{"parameters":{"assignments":{"assignments":[{"id":"b30a3343-4152-44e0-9287-27b1fd8bfce4","name":"idParentFolder","value":"={{ $json.id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[740,60],"id":"dd15659e-a4d0-4a02-8b68-b0f257c313f3","name":"Set idParentFolderCreate"},{"parameters":{"jsCode":"// Initialiser la variable pour stocker l'ID du dossier parent\nlet idParentFolder;\n\n// Vérifier si le nœud \"Set idParentFolder\" existe et contient l'ID\nif ($node[\"Set idParentFolder\"] && $node[\"Set idParentFolder\"].json && $node[\"Set idParentFolder\"].json.idParentFolder) {\n  idParentFolder = $node[\"Set idParentFolder\"].json.idParentFolder;\n}\n\n// Si non trouvé, vérifier le nœud \"Set idParentFolderCreate\"\nif (!idParentFolder && $node[\"Set idParentFolderCreate\"] && $node[\"Set idParentFolderCreate\"].json && $node[\"Set idParentFolderCreate\"].json.idParentFolder) {\n  idParentFolder = $node[\"Set idParentFolderCreate\"].json.idParentFolder;\n}\n\n// Retourner l'ID du dossier parent existant\nreturn [{ json: { idParentFolder } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[860,-40],"id":"2c9c4e4a-660f-448c-8904-c9486e6168c9","name":"Get IdParentFolder"},{"parameters":{"authentication":"oAuth2","resource":"folder","name":"={{ $json[\"path\"].split('/').pop() }}","options":{"parents":["={{ $json.id }}"]}},"name":"get drive folder1","type":"n8n-nodes-base.googleDrive","typeVersion":1,"position":[-940,20],"id":"c19ff8a8-1e71-43b1-ab4b-73319988b2dc","alwaysOutputData":true,"credentials":{"googleDriveOAuth2Api":{"id":"Mu7yxTxQSL3Ke6rX","name":"Google Drive account"}}},{"parameters":{"jsCode":"const items = $input.all();\n\nconst extractedPaths = [];\n\nfor (const item of items) {\n    if (item.json.path) {\n        // Diviser la chaîne en sous-dossiers (supprime le fichier final)\n        const parts = item.json.path.split('/').slice(0, -1); \n        let currentPath = '';\n        \n        for (const part of parts) {\n            currentPath += part + '/';\n            extractedPaths.push(currentPath.replace(/\\/$/, '')); // Supprime le dernier '/'\n        }\n    }\n}\n\n// Supprime les doublons\nconst uniquePaths = [...new Set(extractedPaths)];\n\n// Retourne les chemins formatés\nreturn uniquePaths.map(path => ({\n    json: {\n        path\n    }\n}));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[380,620],"id":"2ed77b36-3d36-4e4b-ad10-68a35d7ec4e8","name":"Code1"},{"parameters":{"resource":"folder","name":"={{ $node[\"setFields\"].json[\"folderGithub\"] }}","driveId":{"__rl":true,"mode":"list","value":"My Drive"},"folderId":{"__rl":true,"value":"={{ $node[\"setFields\"].json[\"urlDrive\"].trim() }}","mode":"id"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[-2780,540],"id":"500e5a44-6ea4-4834-b688-5c21836ba0df","name":"Google Drive","credentials":{"googleDriveOAuth2Api":{"id":"Mu7yxTxQSL3Ke6rX","name":"Google Drive account"}}},{"parameters":{"assignments":{"assignments":[{"id":"b206d289-a89a-4722-acc5-65478b5c2b3b","name":"Url du de la documentation du dépôt Github","value":"https://github.com/Olivier340/n8n-docs","type":"string"},{"id":"2a13b915-b445-49f8-9203-1d8f1d40be56","name":"Url de votre répertoire Drive","value":"https://drive.google.com/drive/folders/1YCugN9LL7YlgkrK89ucRo6gZQuhGN3zB","type":"string"},{"id":"b510a045-b7c2-4689-b4d9-f1c5a5d870ce","name":"Path Sous-répertoire","value":"docs","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-3380,0],"id":"7542ebff-5f0b-4105-8260-13da6111c302","name":"Edit Fields"},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-3600,0],"id":"0c6d6848-f5d4-4078-bf16-c4a454109da5","name":"When clicking ‘Test workflow’"},{"parameters":{"resource":"folder","name":"={{ $json[\"Url du de la documentation du dépôt Github\"].split('/').slice(-1)[0] }}","driveId":{"__rl":true,"mode":"list","value":"My Drive"},"folderId":{"__rl":true,"value":"={{ $json['Url de votre répertoire Drive'].match(/[-\\w]{25,}/)[0] }}","mode":"id"},"options":{}},"type":"n8n-nodes-base.googleDrive","typeVersion":3,"position":[-3200,200],"id":"171bfba3-333f-4fd4-8fb1-9532665ee080","name":"Google Drive2","credentials":{"googleDriveOAuth2Api":{"id":"Mu7yxTxQSL3Ke6rX","name":"Google Drive account"}}},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3,"position":[-3020,20],"id":"40780711-de44-4cba-8594-c8963f54afa5","name":"Merge"},{"parameters":{"jsCode":"// Dans un Code Node en amont de \"get drive folder1\"\nlet parentId;\ntry {\n  const stockageNodes = $('Stockage IDs').all(); \n  const found = stockageNodes.find(item => item.json.path === parentPath);\n  parentId = found ? found.json.id : $('setid').json.id;\n} catch (error) {\n  // Fallback si Stockage IDs est indisponible\n  parentId = $('setid').json.id;\n}\n\n// On stocke parentId dans item.json pour la suite\nreturn [{ json: { parentId } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-680,360],"id":"f648e420-b90c-435e-b67f-8847f9311ac2","name":"Code2","executeOnce":false,"alwaysOutputData":true},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-1220,0],"id":"389e617a-2f0f-4719-859e-e4e5b77f5520","name":"Loop Over Items"},{"parameters":{},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[-440,20],"id":"15e6fcba-673b-4601-b88b-29931cbe0316","name":"Wait","webhookId":"9c6722a1-2153-487f-9db7-3606bf73027b"},{"parameters":{"jsCode":"for (const item of $input.all()) {\n  // Vérifie si le chemin contient un sous-répertoire (présence de '/')\n  const isFirstLevel = !item.json.path.includes('/');\n \n  // Attribue 0 pour le premier niveau, 1 pour les autres\n  item.json.myNewField = isFirstLevel ? 0 : 1;\n}\n\nreturn $input.all();"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1720,0],"id":"b1e05796-e621-4cfe-ae97-66ac1b0ea6ba","name":"Code4"},{"parameters":{"functionCode":"return [\n    {\n      json: {\n        articleId: 1,\n      }   \n    },\n        {\n      json: {\n        articleId: 2,\n      }   \n    },\n        {\n      json: {\n        articleId: 3,\n      }   \n    }\n]"},"name":"mockup_data","type":"n8n-nodes-base.function","typeVersion":1,"position":[-1800,960],"id":"6b7ff7c8-5443-4064-a315-778188552c15"},{"parameters":{},"name":"NoOp","type":"n8n-nodes-base.noOp","typeVersion":1,"position":[-760,1000],"id":"b65a90ec-37e9-4e0b-ae2e-93b0b2f662f1"},{"parameters":{"operation":"delete","sheetId":"asasasasas"},"name":"Google Sheets","type":"n8n-nodes-base.googleSheets","typeVersion":1,"position":[-1220,960],"id":"12e5aedb-c348-4d17-b282-a27986d9750a","credentials":{"googleApi":{"id":null,"name":"asas"}}},{"parameters":{"conditions":{"boolean":[{"value1":"={{$node[\"SplitInBatches\"].context[\"noItemsLeft\"]}}","value2":true}]}},"name":"IF","type":"n8n-nodes-base.if","typeVersion":1,"position":[-1000,1120],"id":"f43b6076-07d6-454f-a3f4-1e1e533bcdb7"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[-2920,-640],"id":"f123d79f-26d5-4252-9c05-bab93bb27d85","name":"AI Agent"},{"parameters":{"promptType":"define","text":"={{ $json.path }}","options":{"systemMessage":"You are a helpful assistant\npour chaque chemin reçu en entrée tu créeras un répertoire sur google drive en utilisant  {{$json.path.split('/').slice(0, -1).join('/')}} pour récupérer le dernier répertoire du chemin fourni\nPour chaque répertoire créer tu stockeras son identifiant afin de pouvoir l'utiliser comme répertoire parent si nécessaire.\nTools:\nsearchFolder : permet de rechercher le répertoire parent et de récupérer son id \ncreateFolder : permet de créer les répertoires sur google drive"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.8,"position":[-1880,-760],"id":"2039e892-015c-4695-8fd2-022763cadcd3","name":"AI Agent1"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4o-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-2020,-360],"id":"6e52d6e2-64a4-4190-8cad-b6e58b760b0e","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"d4zSwzevlcDFPS3v","name":"OpenAi account"}}},{"parameters":{"resource":"folder","name":"={{$json.path.split('/').slice(0, -1).join('/')}}","driveId":{"__rl":true,"value":"My Drive","mode":"list","cachedResultName":"My Drive","cachedResultUrl":"https://drive.google.com/drive/my-drive"},"folderId":{"__rl":true,"value":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Parent_Folder', ``, 'string') }}","mode":"id"},"options":{}},"type":"n8n-nodes-base.googleDriveTool","typeVersion":3,"position":[-1460,-300],"id":"c7e3996c-34f1-48e9-8d78-aeaa92e0857f","name":"createFolder","credentials":{"googleDriveOAuth2Api":{"id":"Mu7yxTxQSL3Ke6rX","name":"Google Drive account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"4564dgd46gd"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[-1880,-280],"id":"acb2a53c-7dbd-4ec1-949a-441aa9174737","name":"Simple Memory"},{"parameters":{"resource":"fileFolder","queryString":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Search_Query', ``, 'string') }}","filter":{},"options":{}},"type":"n8n-nodes-base.googleDriveTool","typeVersion":3,"position":[-1660,-300],"id":"791d08b1-59f9-4fd7-8d3c-67cdd7862813","name":"searchFolder","credentials":{"googleDriveOAuth2Api":{"id":"Mu7yxTxQSL3Ke6rX","name":"Google Drive account"}}},{"parameters":{"functionCode":"try {\n  // Vérification de la présence des données d'entrée\n  if (!$input || typeof $input.all !== 'function') {\n    throw new Error(\"Aucune donnée d'entrée fournie !\");\n  }\n\n  // Récupérer tous les éléments d'entrée\n  const items = $input.all();\n  if (!Array.isArray(items) || !items.length) {\n    throw new Error(\"Les données d'entrée ne sont pas au format attendu !\");\n  }\n\n  // Vérifier la présence du nœud 'setFields'\n  if (!$node[\"setFields\"] || !$node[\"setFields\"].json) {\n    throw new Error(\"Le nœud 'setFields' est manquant ou mal configuré !\");\n  }\n\n  // Récupérer les extensions depuis 'setFields'\n  let rawExtensions = $node[\"setFields\"].json.extensions;\n  console.log(\"Extensions trouvées dans le nœud setFields:\", rawExtensions);\n  if (typeof rawExtensions === 'object' && !Array.isArray(rawExtensions)) {\n    console.warn(\"⚠️ Le champ 'extensions' est un objet. Conversion en tableau basée sur les clés...\");\n    rawExtensions = Object.keys(rawExtensions);\n  }\n\n  if (!Array.isArray(rawExtensions)) {\n    throw new Error(`Le champ 'extensions' doit être un tableau. Type trouvé : ${typeof rawExtensions}`);\n  }\n\n  // Filtrer les extensions valides\n  const allowedExtensions = rawExtensions\n    .filter(ext => typeof ext === 'string' && ext.trim() !== '')\n    .map(ext => `.${ext}`);\n  if (!allowedExtensions.length) {\n    throw new Error(\"Aucune extension valide trouvée dans le champ 'extensions' du nœud 'setFields' !\");\n  }\n\n  // Récupérer le chemin du sous-répertoire\n  const subdirectoryPath = $node[\"setFields\"].json['folderDocs'] || '';\n  if (typeof subdirectoryPath !== 'string' || subdirectoryPath.trim() === '') {\n    throw new Error(\"Chemin du sous-répertoire invalide !\");\n  }\n\n  const filteredFiles = [];\n  for (const item of items) {\n    if (item.json && Array.isArray(item.json.tree)) {\n      for (const file of item.json.tree) {\n        if (file.path && file.url) {\n          const fileExtension = `.${file.path.split('.').pop()}`;\n          // On vérifie ici que le chemin est exactement \"docs\" ou commence par \"docs/\"\n          if ((file.path === subdirectoryPath || file.path.startsWith(`${subdirectoryPath}/`)) && allowedExtensions.includes(fileExtension)) {\n            filteredFiles.push({ json: { path: file.path, url: file.url } });\n          }\n        }\n      }\n    }\n  }\n\n  if (!filteredFiles.length) {\n    console.warn(\"Aucun fichier correspondant n'a été trouvé !\");\n  }\n\n  return filteredFiles;\n} catch (error) {\n  console.error(`❌ Erreur détectée : ${error.message}`);\n  throw new Error(`Erreur : ${error.message}`);\n}\n"},"id":"8c96a3b4-f1c2-495c-b978-ffc3e3f148d8","name":"Filtrer les fichiers","type":"n8n-nodes-base.function","typeVersion":1,"position":[-2240,0],"alwaysOutputData":true},{"parameters":{"assignments":{"assignments":[{"id":"4498f57e-89e7-4038-91b4-bc55c15f7a87","name":"id","value":"={{ $json.id }}","type":"string"},{"id":"88bff86a-50ba-4825-97e5-f6a381460cb4","name":"path","value":"={{ $('Loop Over Items').item.json.path }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-700,20],"id":"73456fd1-0d73-4957-9696-3d9547320281","name":"Edit Fields1"},{"parameters":{"jsCode":"async function createDriveFolder(name, parentId) {\n  try {\n    // 1. Récupération directe des credentials\n    const credentials = await this.getCredentials('Google Drive account'); // 🔼 Remplacez par votre nom de credentials\n    \n    // 2. Vérification renforcée\n    if (!credentials?.accessToken) {\n      throw new Error('Credentials manquants ou invalides');\n    }\n\n    // 3. Recherche avec encodage URL\n    const searchResponse = await this.$request({\n      method: 'GET',\n      uri: 'https://www.googleapis.com/drive/v3/files',\n      qs: {\n        q: `name='${encodeURIComponent(name)}' and '${parentId}' in parents and mimeType='application/vnd.google-apps.folder' and trashed=false`,\n        fields: 'files(id,name)',\n        pageSize: 1\n      },\n      auth: { bearer: credentials.accessToken }\n    });\n\n    if (searchResponse.files?.length > 0) {\n      return searchResponse.files[0].id;\n    }\n\n    // 4. Création avec gestion des erreurs détaillée\n    const createResponse = await this.$request({\n      method: 'POST',\n      uri: 'https://www.googleapis.com/drive/v3/files',\n      body: {\n        name,\n        mimeType: 'application/vnd.google-apps.folder',\n        parents: [parentId]\n      },\n      auth: { bearer: credentials.accessToken }\n    });\n\n    return createResponse.id;\n\n  } catch (error) {\n    console.error(`Erreur technique complète : ${error.stack}`);\n    throw new Error(`Échec création '${name}' : ${error.message}`);\n  }\n}\n\nconst processItem = async (item, rootId) => {\n  const output = { json: { ...item.json }, pairedItem: { item: item.index } };\n  \n  try {\n    let currentParent = rootId;\n    for (const part of item.json.path.split('/')) {\n      currentParent = await createDriveFolder.call(this, part, currentParent);\n      await new Promise(resolve => setTimeout(resolve, 500));\n    }\n    output.json.folderId = currentParent;\n  } catch (error) {\n    output.json.error = `${error.message} (path: ${item.json.path})`;\n  }\n  return output;\n};\n\nconst main = async () => {\n  try {\n    // Vérification initiale des credentials\n    const testCreds = await this.getCredentials('Google Drive account'); // 🔼 Même nom ici\n    if (!testCreds?.accessToken) throw new Error('Configuration credentials invalide');\n\n    const rootId = $('setFields').first().json.idFolderMain;\n    return await Promise.all(\n      $input.all().map((item, index) => {\n        item.index = index;\n        return processItem.call(this, item, rootId);\n      })\n    );\n    \n  } catch (error) {\n    throw new Error(`Échec initialisation : ${error.message}`);\n  }\n};\n\nreturn main.call(this);"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1160,600],"id":"2a080c83-6211-4d50-b73d-62ccd7d26e71","name":"Code"},{"parameters":{"operation":"get","workflowId":{"__rl":true,"mode":"list","value":""},"requestOptions":{}},"name":"Get Credential Wrapper Workflows","type":"n8n-nodes-base.n8n","typeVersion":1,"position":[-1860,600],"id":"c1e44081-3dc5-4e42-87bf-e26d5802cae3","credentials":{"n8nApi":{"id":"BC4KoDrD46diJhJ3","name":"n8n account"}}},{"parameters":{"fieldsToAggregate":{"fieldToAggregate":[{"fieldToAggregate":"credentialsReferences"}]},"options":{"mergeLists":true}},"name":"All (flattened list) Credentials References (if multiple workflows tagged)","type":"n8n-nodes-base.aggregate","typeVersion":1,"position":[-1420,600],"id":"a11885d2-bb2c-43ce-9ed3-865a73df8c9a"},{"parameters":{"assignments":{"assignments":[{"id":"0361ca53-f823-45c5-9b50-336511c7d34d","name":"credentialsReferences","value":"={{ $jmespath($('Get Credential Wrapper Workflows').item.json, \"nodes[?credentials].{ credentials: credentials }\") }}","type":"array"}]},"options":{}},"id":"9cf62bfc-9056-43dc-a1e4-ad51f374f09f","name":"Extract Credentials Info from Workflow JSON","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1640,600]},{"parameters":{"mode":"insert","pineconeIndex":{"__rl":true,"mode":"list","value":""},"options":{}},"type":"@n8n/n8n-nodes-langchain.vectorStorePinecone","typeVersion":1,"position":[-1520,-760],"id":"c7c3305e-fd62-4c85-a9f9-a5e92f2f7c3c","name":"Pinecone Vector Store","credentials":{"pineconeApi":{"id":"Myp9UBBLPdZg8tbq","name":"PineconeApi account"}}},{"parameters":{"jsCode":"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn $input.all();"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1940,0],"id":"56601b82-b0b4-446d-a622-81b269b4e681","name":"Code5"},{"parameters":{"assignments":{"assignments":[{"id":"260fe5ec-2394-4098-b959-e43e73e012d6","name":"id","value":"={{ $('Google Drive2').item.json.id }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1500,0],"id":"071a3753-8e9f-4fac-99ef-ce8ca73881ed","name":"setId"}],"connections":{"HTTP Request":{"main":[[{"node":"Convert to File","type":"main","index":0}]]},"HTTP Request1":{"main":[[{"node":"Filtrer les fichiers","type":"main","index":0}]]},"Convert to File":{"main":[[{"node":"Google Drive1","type":"main","index":0}]]},"On form submission":{"main":[[]]},"setFields":{"main":[[{"node":"HTTP Request1","type":"main","index":0}]]},"get drive folder":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"Set idParentFolder","type":"main","index":0}],[{"node":"Google Drive3","type":"main","index":0}]]},"Set idParentFolder":{"main":[[{"node":"Get IdParentFolder","type":"main","index":0}]]},"Google Drive3":{"main":[[{"node":"Set idParentFolderCreate","type":"main","index":0}]]},"Set idParentFolderCreate":{"main":[[{"node":"Get IdParentFolder","type":"main","index":0}]]},"get drive folder1":{"main":[[{"node":"Edit Fields1","type":"main","index":0}]]},"Google Drive":{"main":[[]]},"Edit Fields":{"main":[[{"node":"Google Drive2","type":"main","index":0},{"node":"Merge","type":"main","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Google Drive2":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"setFields","type":"main","index":0}]]},"Code2":{"main":[[{"node":"get drive folder1","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Code2","type":"main","index":0}]]},"Wait":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Code4":{"main":[[{"node":"setId","type":"main","index":0}]]},"mockup_data":{"main":[[]]},"Google Sheets":{"main":[[]]},"IF":{"main":[[{"node":"NoOp","type":"main","index":0}],[]]},"AI Agent":{"main":[[]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent1","type":"ai_languageModel","index":0}]]},"createFolder":{"ai_tool":[[{"node":"AI Agent1","type":"ai_tool","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"AI Agent1","type":"ai_memory","index":0}]]},"searchFolder":{"ai_tool":[[{"node":"AI Agent1","type":"ai_tool","index":0}]]},"Filtrer les fichiers":{"main":[[{"node":"Code5","type":"main","index":0}]]},"Edit Fields1":{"main":[[{"node":"Wait","type":"main","index":0}]]},"Get Credential Wrapper Workflows":{"main":[[{"node":"Extract Credentials Info from Workflow JSON","type":"main","index":0}]]},"Extract Credentials Info from Workflow JSON":{"main":[[{"node":"All (flattened list) Credentials References (if multiple workflows tagged)","type":"main","index":0}]]},"AI Agent1":{"main":[[{"node":"Pinecone Vector Store","type":"main","index":0}]]},"Code5":{"main":[[{"node":"Code4","type":"main","index":0}]]},"setId":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"60ae0cd4-9185-4a84-a4ae-06d6af798090","triggerCount":2,"tags":[{"createdAt":"2025-01-27T19:03:28.175Z","updatedAt":"2025-01-27T19:03:28.175Z","id":"PG8DLgbABpMUheXx","name":"En cours de construction"},{"createdAt":"2025-03-18T08:07:05.947Z","updatedAt":"2025-03-18T08:07:05.947Z","id":"Cm1SFskLO9c0oS9V","name":"github"},{"createdAt":"2025-03-18T08:07:13.784Z","updatedAt":"2025-03-18T08:07:13.784Z","id":"Ay4YUHWrkMMHNMPD","name":"drive"},{"createdAt":"2025-03-18T08:07:24.308Z","updatedAt":"2025-03-18T08:07:24.308Z","id":"BLiMTrqRd95IKRA3","name":"rag"}],"repo_owner":"Olivier340","repo_name":"n8n-workflow","repo_path":"","subPath":"2025/03/"}